{"version":3,"sources":["components/Header/img/logo.svg","components/Rate/DollarRate/img/logo.svg","components/Rate/EuroRate/img/logo.svg","components/Crypto/Bitcoin/img/logo.svg","components/Crypto/Ethereum/img/logo.svg","components/Crypto/XRP/img/logo.svg","containers/Settings/img/settings.svg","components/Header/Header.jsx","actions/index.js","functions/index.js","actions/dispatchItem.js","functions/getData.js","actions/const.js","components/Rate/DollarRate/DollarRate.jsx","containers/Rate/DollarRate.jsx","components/Rate/EuroRate/EuroRate.jsx","containers/Rate/EuroRate.jsx","components/Crypto/Bitcoin/Bitcoin.jsx","containers/Crypto/Bitcoin.jsx","components/Crypto/Ethereum/Ethereum.jsx","containers/Crypto/Ethereum.jsx","components/Crypto/XRP/XRP.jsx","containers/Crypto/XRP.jsx","actions/dispatchWeather.js","components/Weather/AddCity/AddCity.jsx","containers/Weather/AddCity/AddCity.jsx","containers/Weather/ShowWeather/ShowWeather.jsx","containers/Weather/ToggleWeather/ToggleWeather.jsx","containers/Settings/Settings.jsx","containers/Wrapper.jsx","components/Welcome/Welcome.jsx","App.js","serviceWorker.js","reducers/topic.js","api/mockData/topics.js","reducers/item.js","api/mockData/items.js","reducers/weather.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Fragment","id","className","src","logo","alt","Component","toggleItem","type","fetchDollarRate","fetch","then","response","json","data","Valute","USD","Value","catch","err","console","error","fetchEuroRate","EUR","fetchGBPRate","GBP","fetchCHFRate","CHF","fetchJPYRate","JPY","fetchAUDRate","AUD","fetchBitcoin","price_usd","fetchEthereum","fetchXRP","log","fetchLTC","fetchSTELLAR","fetchBTCCSH","fetchEOS","fetchTETHER","fetchTRON","fetchMONERO","dispatchItem","dispatch","getData","value","changeItem","Math","round","DollarRate","props","this","onChangeValue","localState","status","Rate_DollarRate_DollarRate","connect","state","item","EuroRate","Rate_EuroRate_EuroRate","Bitcoin","Crypto_Bitcoin_Bitcoin","Ethereum","Crypto_Ethereum_Ethereum","XRP","Crypto_XRP_XRP","dispatchWeather","city","query","concat","setWeather","list","main","temp","message","fetchWeather","AddCity","autoFocus","addCity","input","document","getElementById","test","Date","now","toString","_this","onAddCity","onSetWeather","_this2","addEventListener","event","preventDefault","Weather_AddCity_AddCity","idCategory","temprature","ShowWeather","length","map","element","index","key","data-key","style","textDecoration","shouldDelete","weather","ToggleWeather","toggleWeather","target","tagName","getAttribute","onToggleWeather","onClick","onRemove","toggleShouldDelete","Settings","changeState","onChangeState","localStorage","setItem","JSON","stringify","toggleSettings","settings","mainContent","classList","toggle","name","Wrapper","components_Header_Header","Rate_DollarRate","Rate_EuroRate","Crypto_Bitcoin","Crypto_Ethereum","Crypto_XRP","containers_Weather_AddCity_AddCity","containers_Weather_ShowWeather_ShowWeather","Weather_ToggleWeather_ToggleWeather","containers_Settings_Settings","Welcome","App","firstVisit","getItem","setState","containers_Wrapper","components_Welcome_Welcome","PureComponent","Boolean","window","location","hostname","match","initialState","topic","arguments","undefined","action","Object","toConsumableArray","objectSpread","store","parse","i","filter","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e032810.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.385df9b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ded87843.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.1e66b124.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.07475bfe.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.26307f0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.0f92ed63.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.04e848f8.svg\";","import React, {Component} from 'react';\r\nimport logo from './img/logo.svg'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <section id = \"header\">\r\n                    <div className=\"container\">\r\n                        <div className=\"flex-center-row\">\r\n                            <div>\r\n                                <h1>\r\n                                    All-in-One\r\n                                </h1>\r\n                            </div>\r\n                            <div>\r\n                                 <img src = {logo} alt=\"\" id = \"header__img\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","\r\nexport const addItem = (id, idCategory, name, status) => (\r\n    {\r\n        type: 'ADD_ITEM',\r\n        id,\r\n        idCategory,\r\n        name,\r\n        status\r\n    }\r\n)\r\n\r\nexport const addTopic = (id, name, status) => (\r\n    {\r\n        type: 'ADD_TOPIC',\r\n        id,\r\n        name,\r\n        status\r\n    }\r\n)\r\n\r\nexport const toggleTopic = (id) => (\r\n    {\r\n        type: 'TOGGLE_TOPIC',\r\n        id\r\n    }\r\n)\r\n\r\nexport const changeTopic = (id, value) => (\r\n    {\r\n        type: 'CHANGE_TOPIC',\r\n        id,\r\n        value\r\n    }\r\n)\r\n\r\nexport const toggleItem = (id) => (\r\n    {\r\n        type: 'TOGGLE_ITEM',\r\n        id\r\n    }\r\n)\r\n\r\nexport const changeItem = (id, value) => (\r\n    {\r\n        type: \"CHANGE_ITEM\",\r\n        id,\r\n        value\r\n    }\r\n)\r\n\r\n\r\nexport const addCity = (id, city) => (\r\n    {\r\n        type: \"ADD_CITY\",\r\n        id,\r\n        idCategory: 3,\r\n        city,\r\n        temprature: \"\"\r\n    }\r\n)\r\n\r\nexport const removeCity = () => (\r\n    {\r\n        type: \"REMOVE_CITY\"\r\n    }\r\n)\r\n\r\n\r\nexport const toggleShouldDelete = (id) => (\r\n    {\r\n        type: \"TOGGLE_DELETE\",\r\n        id\r\n    }\r\n)\r\n\r\n\r\n\r\nexport const setWeather = (id, value) => (\r\n    {\r\n        type: \"SET_WEATHER\",\r\n        id,\r\n        value: Math.round(value * 10) / 10 + \" °C\"\r\n    }\r\n)","\r\n//Rates\r\nexport const fetchDollarRate = () => {\r\n    return(\r\n    fetch('https://www.cbr-xml-daily.ru/daily_json.js')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return (data.Valute.USD.Value);\r\n        }))\r\n        .catch(err => console.error(\"Error\", err))\r\n}\r\n\r\n\r\nexport const fetchEuroRate = () => {\r\n    return(\r\n    fetch('https://www.cbr-xml-daily.ru/daily_json.js')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return (data.Valute.EUR.Value);\r\n        }))\r\n        .catch(err => console.error(\"Error\", err))\r\n}\r\n\r\n\r\n// export const fetchWeather = (city) => {\r\n//     const url = 'https://api.openweathermap.org/data/2.5/find?q=';\r\n//     const appID = '8c6b34946a9936a4f503e2797bfc6840';\r\n//     const query = `&type=like&APPID=${appID}`;\r\n//     fetch(`${url}${city}${query}`)\r\n//         .then(response => response.json())\r\n//         .then(data => data.list[0].main.temp - 273.15)\r\n//         .catch(message => console.log(message));\r\n// }\r\n\r\n//Crypto\r\n// export const fetchBitcoin = () => {\r\n//     return(\r\n//         fetch('https://api.coinmarketcap.com/v1/ticker/bitcoin/')\r\n//             .then(response => response.json())\r\n//             .then(data => {\r\n//                 return (data[0].price_usd);\r\n//             }))\r\n//             .catch(err => console.error(\"Error\", err)\r\n//     )\r\n// }\r\n\r\n// export const fetchEthereum = () => {\r\n//     return(\r\n//         fetch('https://api.coinmarketcap.com/v1/ticker/ethereum/')\r\n//             .then(response => response.json())\r\n//             .then(data => {\r\n//                 return (data[0].price_usd);\r\n//             }))\r\n//             .catch(err => console.error(\"Error\", err)\r\n//     )\r\n// }\r\n\r\n\r\nexport const fetchGBPRate = () => {\r\n    return(\r\n    fetch('https://www.cbr-xml-daily.ru/daily_json.js')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return (data.Valute.GBP.Value);\r\n        }))\r\n        .catch(err => console.error(\"Error\", err))\r\n}\r\n\r\n\r\nexport const fetchCHFRate = () => {\r\n    return(\r\n    fetch('https://www.cbr-xml-daily.ru/daily_json.js')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return (data.Valute.CHF.Value);\r\n        }))\r\n        .catch(err => console.error(\"Error\", err))\r\n}\r\n\r\n\r\nexport const fetchJPYRate = () => {\r\n    return(\r\n    fetch('https://www.cbr-xml-daily.ru/daily_json.js')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return (data.Valute.JPY.Value);\r\n        }))\r\n        .catch(err => console.error(\"Error\", err))\r\n}\r\n\r\n\r\nexport const fetchAUDRate = () => {\r\n    return(\r\n    fetch('https://www.cbr-xml-daily.ru/daily_json.js')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return (data.Valute.AUD.Value);\r\n        }))\r\n        .catch(err => console.error(\"Error\", err))\r\n}\r\n\r\n\r\nexport const fetchBitcoin = () => {\r\n    return(\r\n        fetch('https://api.coinmarketcap.com/v1/ticker/bitcoin/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                return (data[0].price_usd);\r\n            }))\r\n            .catch(err => console.error(\"Error\", err)\r\n    )\r\n}\r\n\r\nexport const fetchEthereum = () => {\r\n    return(\r\n        fetch('https://api.coinmarketcap.com/v1/ticker/ethereum/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                return (data[0].price_usd);\r\n            }))\r\n            .catch(err => console.error(\"Error\", err)\r\n    )\r\n}\r\n\r\nexport const fetchXRP = () => {\r\n    return(\r\n        fetch('https://api.coinmarketcap.com/v1/ticker/ripple/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data[0]);\r\n                return (data[0].price_usd);\r\n            }))\r\n            .catch(err => console.error(\"Error\", err)\r\n    )\r\n}\r\n\r\nexport const fetchLTC = () => {\r\n    return(\r\n        fetch('https://api.coinmarketcap.com/v1/ticker/litecoin/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data[0]);\r\n                return (data[0].price_usd);\r\n            }))\r\n            .catch(err => console.error(\"Error\", err)\r\n    )\r\n}\r\n\r\nexport const fetchSTELLAR = () => {\r\n    return(\r\n        fetch('https://api.coinmarketcap.com/v1/ticker/stellar/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data[0]);\r\n                return (data[0].price_usd);\r\n            }))\r\n            .catch(err => console.error(\"Error\", err)\r\n    )\r\n}\r\n\r\nexport const fetchBTCCSH = () => {\r\n    return(\r\n        fetch('https://api.coinmarketcap.com/v1/ticker/bitcoin-cash/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data[0]);\r\n                return (data[0].price_usd);\r\n            }))\r\n            .catch(err => console.error(\"Error\", err)\r\n    )\r\n}\r\n\r\nexport const fetchEOS = () => {\r\n    return(\r\n        fetch('https://api.coinmarketcap.com/v1/ticker/eos/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data[0]);\r\n                return (data[0].price_usd);\r\n            }))\r\n            .catch(err => console.error(\"Error\", err)\r\n    )\r\n}\r\n\r\nexport const fetchTETHER = () => {\r\n    return(\r\n        fetch('https://api.coinmarketcap.com/v1/ticker/tether/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data[0]);\r\n                return (data[0].price_usd);\r\n            }))\r\n            .catch(err => console.error(\"Error\", err)\r\n    )\r\n}\r\n\r\nexport const fetchTRON = () => {\r\n    return(\r\n        fetch('https://api.coinmarketcap.com/v1/ticker/tron/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data[0]);\r\n                return (data[0].price_usd);\r\n            }))\r\n            .catch(err => console.error(\"Error\", err)\r\n    )\r\n}\r\n\r\nexport const fetchMONERO = () => {\r\n    return(\r\n        fetch('https://api.coinmarketcap.com/v1/ticker/monero/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data[0]);\r\n                return (data[0].price_usd);\r\n            }))\r\n            .catch(err => console.error(\"Error\", err)\r\n    )\r\n}\r\n\r\n","import {changeItem} from './index';\r\nimport {getData} from '../functions/getData';\r\n\r\n\r\nexport const dispatchItem = (id) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch({type: \"START_DISPATCH\"});\r\n\r\n        let fetch = getData(id);\r\n        \r\n        fetch()\r\n            .then(data => {\r\n                if(data)\r\n                     dispatch(changeItem(id, Math.round(data * 100) / 100));\r\n                else \r\n                     dispatch({type: \"ERROR\"});\r\n            });\r\n    }\r\n}","import {\r\n    DOLLAR_RATE_ID,\r\n    EURO_RATE_ID,\r\n    GBP_RATE_ID,\r\n    CHF_RATE_ID,\r\n    JPY_RATE_ID,\r\n    AUD_RATE_ID,\r\n    BITCOIN_ID,\r\n    ETHEREUM_ID,\r\n    XRP_ID,\r\n    LTC_ID,\r\n    STELLAR_ID,\r\n    BTCCSH_ID,\r\n    EOS_ID,\r\n    TETHER_ID,\r\n    TRON_ID,\r\n    MONERO_ID\r\n} \r\nfrom '../actions/const';\r\n\r\nimport {\r\n    fetchDollarRate,\r\n    fetchEuroRate,\r\n    fetchGBPRate,\r\n    fetchCHFRate,\r\n    fetchJPYRate,\r\n    fetchAUDRate,\r\n    fetchBitcoin,\r\n    fetchEthereum,\r\n    fetchXRP,\r\n    fetchLTC,\r\n    fetchSTELLAR,\r\n    fetchBTCCSH,\r\n    fetchEOS,\r\n    fetchTETHER,\r\n    fetchTRON,\r\n    fetchMONERO\r\n} \r\nfrom './index';\r\n\r\nexport const getData = (id) => {\r\n    switch(id) {\r\n        case DOLLAR_RATE_ID :\r\n            return fetchDollarRate\r\n        case EURO_RATE_ID :\r\n            return fetchEuroRate\r\n        case GBP_RATE_ID :\r\n            return fetchGBPRate\r\n        case CHF_RATE_ID :\r\n            return fetchCHFRate\r\n        case JPY_RATE_ID :\r\n            return fetchJPYRate\r\n        case AUD_RATE_ID :\r\n            return fetchAUDRate\r\n        case BITCOIN_ID : \r\n            return fetchBitcoin\r\n        case ETHEREUM_ID :\r\n            return fetchEthereum\r\n        case XRP_ID :\r\n            return fetchXRP\r\n        case LTC_ID :\r\n            return fetchLTC\r\n        case STELLAR_ID :\r\n            return fetchSTELLAR\r\n        case BTCCSH_ID :\r\n            return fetchBTCCSH\r\n        case EOS_ID :\r\n            return fetchEOS\r\n        case TETHER_ID :\r\n            return fetchTETHER\r\n        case TRON_ID :\r\n            return fetchTRON\r\n        case MONERO_ID :\r\n            return fetchMONERO\r\n    }\r\n}\r\n","//Здесь писать константы\r\nexport const DOLLAR_RATE_ID = 0;\r\nexport const EURO_RATE_ID = 1;\r\nexport const GBP_RATE_ID = 2;\r\nexport const CHF_RATE_ID = 3;\r\nexport const JPY_RATE_ID = 4;\r\nexport const AUD_RATE_ID = 5;\r\n\r\n\r\nexport const BITCOIN_ID = 6;\r\nexport const ETHEREUM_ID = 7;\r\nexport const XRP_ID = 8;\r\nexport const LTC_ID = 9;\r\nexport const STELLAR_ID = 10;\r\nexport const BTCCSH_ID = 11;\r\nexport const EOS_ID = 12;\r\nexport const TETHER_ID = 13;\r\nexport const TRON_ID = 14;\r\nexport const MONERO_ID = 15;\r\n\r\n\r\nexport const WEATHER_ID = 1703;","import React from 'react';\r\nimport logo from './img/logo.svg';\r\n\r\nconst DollarRate = (props) => {\r\n    return(\r\n        <div className=\"col-4 col-md-3 col-lg-2\">\r\n            <div className=\"row\">\r\n               <div className=\"flex-center-center-row rate__item\">\r\n                    <div>\r\n                         <img src= {logo} alt=\"\" className = \"rate-logo\"/>\r\n                    </div>\r\n                    <div>\r\n                        {props.value}\r\n                    </div>\r\n               </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DollarRate;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {dispatchItem} from '../../actions/dispatchItem';\r\n\r\nimport DollarRateComponent from '../../components/Rate/DollarRate/DollarRate';\r\n\r\nclass DollarRate extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onChangeValue(0);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            (this.props.localState.status) ?\r\n           (<React.Fragment>\r\n               <DollarRateComponent value = {this.props.localState.value}/>\r\n            </React.Fragment>)\r\n            :\r\n            (<React.Fragment></React.Fragment>)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        localState: state.item[0]\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeValue: (id) => {\r\n            dispatch(dispatchItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DollarRate);","import React from 'react';\r\nimport logo from './img/logo.svg';\r\n\r\nconst EuroRate = (props) => {\r\n    return(\r\n        <div className=\"col-4 col-md-3 col-lg-2\">\r\n            <div className=\"row\">\r\n               <div className=\"flex-center-center-row rate__item\">\r\n                    <div>\r\n                         <img src= {logo} alt=\"\" className = \"rate-logo\"/>\r\n                    </div>\r\n                    <div>\r\n                        {props.value}\r\n                    </div>\r\n               </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EuroRate;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {dispatchItem} from '../../actions/dispatchItem';\r\n\r\nimport EuroRateComponent from '../../components/Rate/EuroRate/EuroRate';\r\n\r\nclass EuroRate extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onChangeValue(1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            (this.props.localState.status) ?\r\n            (<React.Fragment>\r\n                <EuroRateComponent value = {this.props.localState.value}/>\r\n             </React.Fragment>)\r\n             :\r\n             (<React.Fragment></React.Fragment>)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        localState: state.item[1]\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeValue: (id) => {\r\n            dispatch(dispatchItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EuroRate);","import React from 'react';\r\nimport logo from './img/logo.svg';\r\n\r\n//Здесь только имя компонеты\r\nconst Bitcoin = (props) => {\r\n    return(\r\n        <div className=\"col-4 col-md-3 col-lg-2\">\r\n            <div className=\"row\">\r\n               <div className=\"flex-center-center-row rate__item\">\r\n                    <div>\r\n                         <img src= {logo} alt=\"\" className = \"rate-logo\"/>\r\n                    </div>\r\n                    <div>\r\n                        {props.value}\r\n                    </div>\r\n               </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Здесь только имя компонеты\r\nexport default Bitcoin;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n//Персональная константа\r\nimport {BITCOIN_ID} from '../../actions/const';\r\nimport {dispatchItem} from '../../actions/dispatchItem';\r\n\r\n//Персональное имя ..Component\r\nimport BitcoinComponent from '../../components/Crypto/Bitcoin/Bitcoin';\r\n\r\n//! \r\nclass Bitcoin extends Component {\r\n\r\n    componentDidMount() {\r\n        //!\r\n        this.props.onChangeValue(BITCOIN_ID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            (this.props.localState.status) ?\r\n            //!\r\n           (<React.Fragment>\r\n               <BitcoinComponent value = {this.props.localState.value}/>\r\n            </React.Fragment>)\r\n            :\r\n            (<React.Fragment></React.Fragment>)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        //Константа\r\n        localState: state.item[BITCOIN_ID]\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeValue: (id) => {\r\n            dispatch(dispatchItem(id))\r\n        }\r\n    }\r\n}\r\n\r\n//!\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bitcoin);","import React from 'react';\r\nimport logo from './img/logo.svg';\r\n\r\nconst Ethereum = (props) => {\r\n    return(\r\n        <div className=\"col-4 col-md-3 col-lg-2\">\r\n            <div className=\"row\">\r\n               <div className=\"flex-center-center-row rate__item\">\r\n                    <div>\r\n                         <img src= {logo} alt=\"\" className = \"rate-logo\"/>\r\n                    </div>\r\n                    <div>\r\n                        {props.value}\r\n                    </div>\r\n               </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ethereum;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {dispatchItem} from '../../actions/dispatchItem';\r\nimport {ETHEREUM_ID} from '../../actions/const';\r\nimport EthereumComponent from '../../components/Crypto/Ethereum/Ethereum';\r\n\r\nclass Ethereum extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onChangeValue(ETHEREUM_ID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            (this.props.localState.status) ?\r\n           (<React.Fragment>\r\n               <EthereumComponent value = {this.props.localState.value}/>\r\n            </React.Fragment>)\r\n            :\r\n            (<React.Fragment></React.Fragment>)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        //потом поменять\r\n        localState: state.item[ETHEREUM_ID]\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeValue: (id) => {\r\n            dispatch(dispatchItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ethereum);","import React from 'react';\r\nimport logo from './img/logo.svg';\r\n\r\nconst XRP = (props) => {\r\n    return(\r\n        <div className=\"col-4 col-md-3 col-lg-2\">\r\n            <div className=\"row\">\r\n               <div className=\"flex-center-center-row rate__item\">\r\n                    <div>\r\n                         <img src= {logo} alt=\"\" className = \"rate-logo\"/>\r\n                    </div>\r\n                    <div>\r\n                        {props.value}\r\n                    </div>\r\n               </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XRP;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {dispatchItem} from '../../actions/dispatchItem';\r\nimport {XRP_ID} from '../../actions/const';\r\nimport XRPComponent from '../../components/Crypto/XRP/XRP';\r\n\r\nclass XRP extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onChangeValue(XRP_ID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            (this.props.localState.status) ?\r\n           (<React.Fragment>\r\n               <XRPComponent value = {this.props.localState.value}/>\r\n            </React.Fragment>)\r\n            :\r\n            (<React.Fragment></React.Fragment>)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        localState: state.item[XRP_ID]\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeValue: (id) => {\r\n            dispatch(dispatchItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(XRP);","import {setWeather} from './index';\r\nimport {WEATHER_ID} from './const';\r\nimport {getData} from '../functions/getData';\r\n\r\n\r\nexport const dispatchWeather = (id, city) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch({type: \"START_DISPATCH_WHEATHER\"});\r\n\r\n        \r\n        // let fetch = getData(WEATHER_ID, city);\r\n        const fetchWeather = (city) => {\r\n            const url = 'https://api.openweathermap.org/data/2.5/find?q=';\r\n            const appID = '8c6b34946a9936a4f503e2797bfc6840';\r\n            const query = `&type=like&APPID=${appID}`;\r\n            fetch(`${url}${city}${query}`)\r\n                .then(response => response.json())\r\n                .then(data => dispatch(setWeather(id, data.list[0].main.temp - 273.15)))\r\n                .catch(message => console.log(message));\r\n        }\r\n\r\n        fetchWeather(city);\r\n        \r\n        // fetch()\r\n        //     .then(data => {\r\n        //         if(data)\r\n        //              dispatch(setWeather(id, data));\r\n        //         else \r\n        //              dispatch({type: \"ERROR_DISPATCH_WHEATHER\"});\r\n        //     });\r\n    }\r\n}","import React from 'react';\r\n\r\nconst AddCity = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <input type=\"text\" id = \"addCity__input\" className = \"input\" autoFocus/>\r\n            <button id = \"addCity__button\">\r\n                Add\r\n            </button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddCity;","\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addCity} from '../../../actions/index';\r\nimport {dispatchWeather} from '../../../actions/dispatchWeather';\r\nimport AddCityComponent from '../../../components/Weather/AddCity/AddCity';\r\n\r\nclass AddCity extends Component {\r\n\r\n    addCity = () => {\r\n        let input = document.getElementById('addCity__input');\r\n        let re = /^[a-zA-Z]+$/;\r\n        if (!re.test(input.value)) {\r\n            input.value = \"Please write only english letters\";\r\n            return;\r\n        }\r\n        let id = Date.now().toString();\r\n        this.props.onAddCity(id, input.value);\r\n        this.props.onSetWeather(id, input.value);\r\n        input.value = \"\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        const input = document.getElementById('addCity__input');\r\n        input.addEventListener('click', function(event){\r\n            input.value = \"\";\r\n            event.preventDefault();\r\n        });\r\n        const button = document.getElementById(\"addCity__button\")\r\n        button.addEventListener('click', (event) => {\r\n            this.addCity();\r\n            event.preventDefault()\r\n        })\r\n    } \r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <AddCityComponent/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        localState: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        onAddCity: (id, city) => {\r\n            dispatch(addCity(id, city))\r\n        },\r\n        onSetWeather: (id, city) => {\r\n            dispatch(dispatchWeather(id, city))\r\n        }   \r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCity);","\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ShowWeatherComponent from '../../../components/Weather/ShowWeather/ShowWeather';\r\n\r\n\r\nclass ShowWeather extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <ul id = \"showWeather__ul\">\r\n                {\r\n                    //Перенести в component\r\n                        (this.props.localState.length) ?\r\n                        this.props.localState.map((element, index) => \r\n                            <li key = {index}\r\n                                data-key = {element.id} \r\n                                style = {{textDecoration: element.shouldDelete ? 'line-through' : 'none'}}\r\n                                >\r\n                                {\r\n                                    (element.temprature) ?\r\n                                    (element.city + \" \" + element.temprature) :\r\n                                    (\"Sorry, cannot find weather for \" + element.city)\r\n                                }\r\n                            </li>\r\n                        ) :\r\n\r\n                        <p className = \"description\">\r\n                            Add your first city!<br/>\r\n                            For example: \"London\", \"Rome\", \"Moscow\"\r\n                        </p>\r\n                    }\r\n                </ul>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        localState: state.weather\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n\r\n//     }\r\n// }\r\nexport default connect(mapStateToProps)(ShowWeather);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {toggleShouldDelete} from '../../../actions/index';\r\n\r\nclass ToggleWeather extends Component {\r\n\r\n    toggleWeather = () => {\r\n        const ul = document.getElementById(\"showWeather__ul\");\r\n        ul.addEventListener('click', (event) => {\r\n            let target = event.target;\r\n            if(target.tagName !== \"LI\")\r\n                return;\r\n            target = target.getAttribute(\"data-key\");\r\n            this.props.onToggleWeather(target);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.toggleWeather()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <button onClick = {this.props.onRemove}>\r\n                    Save changes\r\n                </button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         localState: state.weather\r\n//     }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onToggleWeather: (id) => {\r\n            dispatch(toggleShouldDelete(id))\r\n        },\r\n        onRemove: () => {\r\n            dispatch({type:\"REMOVE_CITY\"})\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(ToggleWeather);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { toggleItem } from '../../actions/index';\r\nimport settings from './img/settings.svg';\r\n\r\nclass Settings extends Component {\r\n\r\n    changeState = () => {\r\n        const ul = document.getElementById(\"settings__ul\");\r\n        ul.addEventListener('click', (event) => {\r\n            let target = event.target;\r\n            if(target.tagName !== \"LI\")\r\n                return;\r\n            target = target.getAttribute(\"data-key\");\r\n            this.props.onChangeState(target);\r\n            localStorage.setItem('store', JSON.stringify(this.props.localState))\r\n        })\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        const settings = document.getElementById(\"settings__ul\");\r\n        const mainContent = document.getElementById(\"main-content\");\r\n        const icon = document.getElementById(\"settings__img\");\r\n        icon.addEventListener('click', (event) => {\r\n            settings.classList.toggle(\"hidden\");\r\n            mainContent.classList.toggle(\"hidden\");\r\n            event.preventDefault();\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.changeState();\r\n        this.toggleSettings();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <section id = \"settings\">\r\n                <div className=\"flex-center-center\">\r\n                    <ul id = \"settings__ul\" className = \"hidden\">\r\n                        {\r\n                            this.props.localState.item.map((element, index) => \r\n                            <li \r\n                                key = {index}\r\n                                data-key = {element.id}\r\n                                style = {{textDecoration: element.status ? 'none' : 'line-through' }}>\r\n                                {element.name}\r\n                            </li>)\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <img src = {settings} alt=\"\" id = \"settings__img\"/>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        localState: state\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onChangeState : (id) => {\r\n            dispatch(toggleItem(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)","import React, {Component} from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport DollarRate from './Rate/DollarRate';\r\nimport EuroRate from './Rate/EuroRate';\r\nimport Bitcoin from './Crypto/Bitcoin';\r\nimport Ethereum from './Crypto/Ethereum';\r\nimport XRP from './Crypto/XRP';\r\nimport AddCity from './Weather/AddCity/AddCity';\r\nimport ShowWeather from './Weather/ShowWeather/ShowWeather';\r\nimport ToggleWeather from './Weather/ToggleWeather/ToggleWeather';\r\nimport Settings from './Settings/Settings';\r\n\r\nclass Wrapper extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n                    <div id=\"main-content\">\r\n                        <section id = \"rate\">\r\n                            <div className=\"container\">\r\n                                <h2>Курсы валют</h2>\r\n                                <div className=\"row\">\r\n                                    <DollarRate/>\r\n                                    <EuroRate/>\r\n                                    <DollarRate/>\r\n                                    <EuroRate/>\r\n                                    <DollarRate/>\r\n                                    <EuroRate/>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                        \r\n                        <section id = \"crypto\">\r\n                            <div className=\"container\">\r\n                                <h2>Курс крипты</h2>\r\n                                <div className=\"row\">\r\n                                    <Bitcoin/>\r\n                                    <Ethereum/>\r\n                                    <XRP/>\r\n                                    <Bitcoin/>\r\n                                    <Ethereum/>\r\n                                    <XRP/>\r\n                                    <Bitcoin/>\r\n                                    <Ethereum/>\r\n                                    <XRP/>\r\n                                    <Bitcoin/>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section id = \"weather\">\r\n                            <div className=\"container\">\r\n                                <h2>Прогноз погоды</h2>\r\n                                <div className=\"row\">\r\n                                    <AddCity/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <ShowWeather/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <ToggleWeather/>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                <Settings/>\r\n            </React.Fragment>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default Wrapper;","import React, {Component} from 'react';\r\n\r\n\r\nconst Welcome = () => {\r\n    return(\r\n        <section id = \"welcome\" className=\"flex-center-center\">\r\n                <div>\r\n                    <h2 className = \"white\">\r\n                        Welcome\r\n                    </h2>\r\n                    <button id = \"welcome__reload\">\r\n                        Accept\r\n                    </button>\r\n                </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Welcome","import React, { PureComponent } from 'react';\nimport Wrapper from './containers/Wrapper';\nimport Welcome from './components/Welcome/Welcome';\n\nclass App extends PureComponent {\n\n  state = {\n    firstVisit: localStorage.getItem(\"firstVisit\")\n  }\n\n  componentDidMount() {\n    if(!localStorage.getItem(\"firstVisit\")){\n      const ok = document.getElementById(\"welcome__reload\");\n      ok.addEventListener('click', () => {\n          localStorage.setItem(\"firstVisit\", true)\n          this.setState({\n            firstVisit: true\n          })\n      })\n    }\n  }\n\n  render() {\n    return (\n        (this.state.firstVisit)\n        ?\n        <React.Fragment>\n            <Wrapper/>\n        </React.Fragment>\n        :\n        <React.Fragment>\n            <Welcome/>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nimport topics from '../api/mockData/topics';\r\n// const initialState = [{\r\n//     id: 0,\r\n//     name: \"Курсы валют\",\r\n//     state: true\r\n// }]\r\n\r\nconst initialState = topics;\r\n\r\nconst topic = (state = initialState, action) => {\r\n\r\n    if(action.type  === \"ADD_TOPIC\") {\r\n        return [\r\n            ...state,\r\n            {\r\n                id: action.id,\r\n                name: action.name,\r\n                status: action.status\r\n            }\r\n        ]\r\n    }\r\n\r\n    if(action.type  === \"TOGGLE_TOPIC\") {\r\n        console.log(\"TOGGLE_STATE\", action.id);\r\n        return state.map(element => (\r\n            (element.id == action.id)\r\n              ? {...element, status: !element.status }\r\n              : element)\r\n        );\r\n    }\r\n    \r\n    if(action.type === \"CHANGE_TOPIC\") {\r\n        return state.map(element => (\r\n            (element.id == action.id) \r\n                ? {...element, value: action.value}\r\n                : element)\r\n        );\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default topic;","\r\nconst topic = [\r\n    {\r\n        id: 0,\r\n        name: \"Курсы валют\"\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"Курсы криптовалют\"\r\n    }\r\n]\r\n\r\nexport default topic;","\r\nimport items from '../api/mockData/items';\r\n\r\nlet initialState = items;\r\n\r\nif(localStorage.getItem(\"store\")) {\r\n    const store = JSON.parse(localStorage.getItem(\"store\"));\r\n    if(store.item)\r\n        initialState = store.item\r\n}\r\n\r\n\r\nconst item = (state = initialState, action) => {\r\n    let {id, idCategory, name} = action;\r\n    if(action.type  === \"ADD_ITEM\") {\r\n        return [\r\n            ...state,\r\n            {\r\n                id,\r\n                idCategory,\r\n                name,\r\n                value: \"\",\r\n                status: true\r\n            }\r\n        ]\r\n    }\r\n\r\n    if(action.type  === \"TOGGLE_ITEM\") {\r\n        console.log(\"TOGGLE_STATE\", action.id);\r\n        return state.map(element => (\r\n            (element.id == action.id)\r\n              ? {...element, status: !element.status}\r\n              : element)\r\n        );\r\n    }\r\n    \r\n    if(action.type === \"CHANGE_ITEM\") {\r\n        return state.map(element => (\r\n            (element.id == action.id) \r\n                ? {...element, value: action.value}\r\n                : element)\r\n        );\r\n    }\r\n    \r\n    return state;\r\n}\r\n\r\nexport default item;","import {\r\n    DOLLAR_RATE_ID,\r\n    EURO_RATE_ID,\r\n    GBP_RATE_ID,\r\n    CHF_RATE_ID,\r\n    JPY_RATE_ID,\r\n    AUD_RATE_ID,\r\n    BITCOIN_ID,\r\n    ETHEREUM_ID,\r\n    XRP_ID,\r\n    LTC_ID,\r\n    STELLAR_ID,\r\n    BTCCSH_ID,\r\n    EOS_ID,\r\n    TETHER_ID,\r\n    TRON_ID,\r\n    MONERO_ID,\r\n} from '../../actions/const';\r\n\r\n// IdCategory 0 - валюты\r\n//            1 - крита\r\n\r\n//  const items = [\r\n//     {\r\n//         id: DOLLAR_RATE_ID,\r\n//         idCategory: 0,\r\n//         name: \"Курс доллара\",\r\n//         value: \"\",\r\n//         status: true\r\n\r\n//     },\r\n//     {\r\n//         id: EURO_RATE_ID,\r\n//         idCategory: 0,\r\n//         name: \"Курс евро\",\r\n//         value: \"\",\r\n//         status: true\r\n//     },\r\n//     {\r\n//         id: BITCOIN_ID,\r\n//         idCategory: 1,\r\n//         name: \"Курс битка\",\r\n//         value: \"\",\r\n//         status: true\r\n//     },\r\n//     {\r\n//         id: ETHEREUM_ID,\r\n//         idCategory: 1,\r\n//         name: \"Курс эфириума\",\r\n//         value: \"\",\r\n//         status: true\r\n//     }\r\n\r\n// ]\r\n\r\n\r\nconst items = [\r\n    {\r\n        id: DOLLAR_RATE_ID,\r\n        idCategory: 0,\r\n        name: \"Курс доллара\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: EURO_RATE_ID,\r\n        idCategory: 0,\r\n        name: \"Курс евро\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: GBP_RATE_ID,\r\n        idCategory: 0,\r\n        name: \"Курс Британского Фунта\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: CHF_RATE_ID,\r\n        idCategory: 0,\r\n        name: \"Курс Швейцарского франка\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: JPY_RATE_ID,\r\n        idCategory: 0,\r\n        name: \"Курс Японской иены\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: AUD_RATE_ID,\r\n        idCategory: 0,\r\n        name: \"Курс Австралийского доллара\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: BITCOIN_ID,\r\n        idCategory: 1,\r\n        name: \"Курс BTC\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: ETHEREUM_ID,\r\n        idCategory: 1,\r\n        name: \"Курс ETHEREUM\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: XRP_ID,\r\n        idCategory: 1,\r\n        name: \"Курс XRP\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: LTC_ID,\r\n        idCategory: 1,\r\n        name: \"Курс LTC\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: STELLAR_ID,\r\n        idCategory: 1,\r\n        name: \"Курс STELLAR\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: BTCCSH_ID,\r\n        idCategory: 1,\r\n        name: \"Курс BTCCSH\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: EOS_ID,\r\n        idCategory: 1,\r\n        name: \"Курс EOS\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: TETHER_ID,\r\n        idCategory: 1,\r\n        name: \"Курс TETHER\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: TRON_ID,\r\n        idCategory: 1,\r\n        name: \"Курс TRON\",\r\n        value: \"\",\r\n        status: true\r\n    },\r\n    {\r\n        id: MONERO_ID,\r\n        idCategory: 1,\r\n        name: \"Курс MONERO\",\r\n        value: \"\",\r\n        status: true\r\n    }\r\n\r\n]\r\n\r\n\r\nexport default items;","\r\nlet initialState = [];\r\n\r\nif(localStorage.getItem(\"store\")) {\r\n    const store = JSON.parse(localStorage.getItem(\"store\"));\r\n    if(store.weather)\r\n        initialState = store.weather\r\n}\r\n\r\nconst weather = (state = initialState, action) => {\r\n\r\n    if (action.type === \"ADD_CITY\") {\r\n        let {id, idCategory, city, temprature} = action;\r\n        return [\r\n            ...state, \r\n            {\r\n                id,\r\n                idCategory,\r\n                city,\r\n                temprature,\r\n                shouldDelete: false\r\n            }\r\n        ]\r\n    }\r\n\r\n    if(action.type === \"SET_WEATHER\") {\r\n        return state.map(i =>\r\n            (i.id == action.id) ?\r\n            {...i, temprature: action.value}:\r\n            i);\r\n    }\r\n\r\n    if (action.type === \"TOGGLE_DELETE\") {\r\n        return state.map(i =>\r\n            (i.id == action.id) ?\r\n            {...i, shouldDelete: !i.shouldDelete}:\r\n            i);\r\n    }\r\n\r\n    if (action.type === \"REMOVE_CITY\") {\r\n        return state.filter(function(item) {\r\n            return (item.shouldDelete === false)\r\n        });\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default weather;","import { combineReducers } from 'redux';\r\n\r\nimport topic from './topic.js';\r\nimport item from './item.js';\r\nimport weather from './weather.js';\r\n\r\nexport default combineReducers(\r\n    {\r\n        topic,\r\n        item,\r\n        weather\r\n    }\r\n)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/main.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers/index';\nimport {dispatchWeather} from './actions/dispatchWeather';\n \nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nstore.subscribe(() => {\n    localStorage.setItem('store', JSON.stringify(store.getState()));\n});\n\n\nstore.dispatch(dispatchWeather(\"1543913042376\", 1703));\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App/>\n    </Provider>\n, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}